import asyncio
import random
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

options = []  # –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üé≤ –†—É–ª–µ—Ç–∫–∞")],
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å")],
        [KeyboardButton(text="‚ùå –°–±—Ä–æ—Å")],
    ],
    resize_keyboard=True
)


@dp.message(Command("start"))
async def start(message: types.Message):
    user_name = message.from_user.full_name  # –ë–µ—Ä–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –≠—Ç–æ —Ä—É–ª–µ—Ç–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∏–≥–∞—Ä. –î–æ–±–∞–≤—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏ –∏—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É!",
        reply_markup=keyboard
    )


@dp.message(lambda message: message.text == "üé≤ –†—É–ª–µ—Ç–∫–∞")
async def spin_roulette(message: types.Message):
    if options:
        choice = random.choice(options)
        await message.answer(f"üéØ –í—ã–ø–∞–ª–æ: {choice}")
    else:
        await message.answer("–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã!")


@dp.message(lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å")
async def add_option_prompt(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏.")


@dp.message(lambda message: message.text == "‚ùå –°–±—Ä–æ—Å")
async def reset_options(message: types.Message):
    global options
    options = []
    await message.answer("‚úÖ –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω!")


@dp.message()
async def add_option(message: types.Message):
    options.append(message.text)
    await message.answer(f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {message.text}")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
